# Starter pipeline
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-*.xml'
    failTaskOnFailedTests: true
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'pytest tests/unit/data_test.py --doctest-modules --junitxml=junit/test-result.xml --cov=data_test --cov-report=xml --cov-report=html'

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:

trigger:
  -master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
